---
variables:
  GIT_STRATEGY: none
  CI_GITLAB_SERVER: "https://gitlab.asgardahost.ru"
  CI_DATAFILE: "/tmp/${CI_PROJECT_NAME}-${CI_COMMIT_SHA}-${CI_CONCURRENT_PROJECT_ID}.dat"
  CI_IS_PKG_VERSION_MANAGED: "no"
  CI_BUILDER_IMAGE: "registry.asgardahost.ru:4444/docker/asg_registry/public/rpmbuilder_centos7:amd64_2.0"

stages:
  - build
  - sign
  - publish
  - publish-to-github
  - cleanup

build-package-job:
  stage: build
  script:
    - BUILDLOG=$( mktemp )
    - if [ "x${BUILDLOG}" == "x" ] ; then false ; else true ; fi
    - exit_code=0
    - buildPackage.sh >> ${BUILDLOG} 2>&1 || exit_code=$?
    - cat ${BUILDLOG}
    - if [ ${exit_code} -ne 0 ] ; then rm -vf ${BUILDLOG} ; exit ${exit_code} ; fi
    - BUILTPKGLOCATION=$( cat ${BUILDLOG} | grep "Packages were built successfully. They stored in " | awk '{ print $NF }' )
    - echo "Cleanup temporary buildlog" && rm -vf ${BUILDLOG}
    - if [ "x${BUILTPKGLOCATION}" == "x" ] ; then false ; else true ; fi
    - echo "${BUILTPKGLOCATION}" >> ${CI_DATAFILE}
    - echo "Packages were built successfully. They stored in ${BUILTPKGLOCATION}"

sign-job:
  stage: sign
  script:
    - BUILTPKGLOCATION=$( cat ${CI_DATAFILE} )
    - signRPM.sh ${BUILTPKGLOCATION}

publish-job:
  stage: publish
  script:
    - BUILTPKGLOCATION=$( cat ${CI_DATAFILE} )
    - deployPackageToMyRepo.sh ${BUILTPKGLOCATION}

sync-to-github-job:
  stage: publish-to-github
  script:
    - BUILTPKGLOCATION=$( cat ${CI_DATAFILE} )
    - rm -vfr ${BUILTPKGLOCATION}
    - PROJECT_DIR=$( dirname ${BUILTPKGLOCATION} )
    - cd ${CI_BUILDS_DIR}
    - REPODIR=$( mktemp -d )
    - AGENTPIDFILE=$( mktemp )
    - eval `ssh-agent` > ${AGENTPIDFILE}
    - AGENTPID=$( cat ${AGENTPIDFILE} | egrep -o 'Agent pid [0-9]+' | egrep -o '[0-9]+' ) 
    - rm -vf ${AGENTPIDFILE}
    - ssh-add /home/gitlab-runner/.ssh/id_rsa
    - git clone git@github.com:arrnorets/pylibs.git ${REPODIR}
    - cd ${PROJECT_DIR}
    - cp -dpRv * ${REPODIR}
    - cd ${REPODIR}
    - git add -A .
    - git commit -m "${CI_COMMIT_MESSAGE}" || exit 1
    - git push origin main || exit 1
    - cd ${CI_BUILDS_DIR}
    - rm -vfr ${REPODIR}
    - kill -9 ${AGENTPID}

cleanup-job:
  stage: cleanup
  script:
    - BUILTPKGLOCATION=$( cat ${CI_DATAFILE} )
    - rm -vf ${CI_DATAFILE}
    - rm -vfr `dirname ${BUILTPKGLOCATION}`

